//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Discovery.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class DirectoryList : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _discoveryVersion;
        
        private System.Collections.Generic.IList<DirectoryList.ItemsData> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>Indicate the version of the Discovery API used to generate this doc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("discoveryVersion")]
        public virtual string DiscoveryVersion {
            get {
                return this._discoveryVersion;
            }
            set {
                this._discoveryVersion = value;
            }
        }
        
        /// <summary>The individual directory entries. One entry per api/version pair.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<DirectoryList.ItemsData> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The kind for this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
        
        public class ItemsData {
            
            private string _description;
            
            private string _discoveryLink;
            
            private string _discoveryRestUrl;
            
            private string _documentationLink;
            
            private ItemsData.IconsData _icons;
            
            private string _id;
            
            private string _kind;
            
            private System.Collections.Generic.IList<string> _labels;
            
            private string _name;
            
            private System.Nullable<bool> _preferred;
            
            private string _title;
            
            private string _version;
            
            /// <summary>The description of this API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("description")]
            public virtual string Description {
                get {
                    return this._description;
                }
                set {
                    this._description = value;
                }
            }
            
            /// <summary>A link to the discovery document.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("discoveryLink")]
            public virtual string DiscoveryLink {
                get {
                    return this._discoveryLink;
                }
                set {
                    this._discoveryLink = value;
                }
            }
            
            /// <summary>The url for the discovery REST document.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("discoveryRestUrl")]
            public virtual string DiscoveryRestUrl {
                get {
                    return this._discoveryRestUrl;
                }
                set {
                    this._discoveryRestUrl = value;
                }
            }
            
            /// <summary>A link to human readable documentation for the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("documentationLink")]
            public virtual string DocumentationLink {
                get {
                    return this._documentationLink;
                }
                set {
                    this._documentationLink = value;
                }
            }
            
            /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("icons")]
            public virtual ItemsData.IconsData Icons {
                get {
                    return this._icons;
                }
                set {
                    this._icons = value;
                }
            }
            
            /// <summary>The id of this API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The kind for this response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("kind")]
            public virtual string Kind {
                get {
                    return this._kind;
                }
                set {
                    this._kind = value;
                }
            }
            
            /// <summary>Labels for the status of this API, such as labs or deprecated.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("labels")]
            public virtual System.Collections.Generic.IList<string> Labels {
                get {
                    return this._labels;
                }
                set {
                    this._labels = value;
                }
            }
            
            /// <summary>The name of the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this._name;
                }
                set {
                    this._name = value;
                }
            }
            
            /// <summary>True if this version is the preferred version to use.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("preferred")]
            public virtual System.Nullable<bool> Preferred {
                get {
                    return this._preferred;
                }
                set {
                    this._preferred = value;
                }
            }
            
            /// <summary>The title of this API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("title")]
            public virtual string Title {
                get {
                    return this._title;
                }
                set {
                    this._title = value;
                }
            }
            
            /// <summary>The version of the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("version")]
            public virtual string Version {
                get {
                    return this._version;
                }
                set {
                    this._version = value;
                }
            }
            
            /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
            public class IconsData {
                
                private string _x16;
                
                private string _x32;
                
                /// <summary>The url of the 16x16 icon.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("x16")]
                public virtual string X16 {
                    get {
                        return this._x16;
                    }
                    set {
                        this._x16 = value;
                    }
                }
                
                /// <summary>The url of the 32x32 icon.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("x32")]
                public virtual string X32 {
                    get {
                        return this._x32;
                    }
                    set {
                        this._x32 = value;
                    }
                }
            }
        }
    }
    
    public class JsonSchema {
        
        private string _Ref;
        
        private JsonSchema _additionalProperties;
        
        private JsonSchema.AnnotationsData _annotations;
        
        private string _default;
        
        private string _description;
        
        private System.Collections.Generic.IList<string> _enum;
        
        private System.Collections.Generic.IList<string> _enumDescriptions;
        
        private string _format;
        
        private string _id;
        
        private JsonSchema _items;
        
        private string _location;
        
        private string _maximum;
        
        private string _minimum;
        
        private string _pattern;
        
        private JsonSchema.PropertiesData _properties;
        
        private System.Nullable<bool> _readOnly;
        
        private System.Nullable<bool> _repeated;
        
        private System.Nullable<bool> _required;
        
        private string _type;
        
        /// <summary>A reference to another schema. The value of this property is the &quot;id&quot; of another schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("$ref")]
        public virtual string Ref {
            get {
                return this._Ref;
            }
            set {
                this._Ref = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("additionalProperties")]
        public virtual JsonSchema AdditionalProperties {
            get {
                return this._additionalProperties;
            }
            set {
                this._additionalProperties = value;
            }
        }
        
        /// <summary>Additional information about this property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("annotations")]
        public virtual JsonSchema.AnnotationsData Annotations {
            get {
                return this._annotations;
            }
            set {
                this._annotations = value;
            }
        }
        
        /// <summary>The default value of this property (if one exists).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("default")]
        public virtual string Default {
            get {
                return this._default;
            }
            set {
                this._default = value;
            }
        }
        
        /// <summary>A description of this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Values this parameter may take (if it is an enum).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enum")]
        public virtual System.Collections.Generic.IList<string> Enum {
            get {
                return this._enum;
            }
            set {
                this._enum = value;
            }
        }
        
        /// <summary>The descriptions for the enums. Each position maps to the corresponding value in the &quot;enum&quot; array.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enumDescriptions")]
        public virtual System.Collections.Generic.IList<string> EnumDescriptions {
            get {
                return this._enumDescriptions;
            }
            set {
                this._enumDescriptions = value;
            }
        }
        
        /// <summary>An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format {
            get {
                return this._format;
            }
            set {
                this._format = value;
            }
        }
        
        /// <summary>Unique identifier for this schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual JsonSchema Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>Whether this parameter goes in the query or the path for REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location {
            get {
                return this._location;
            }
            set {
                this._location = value;
            }
        }
        
        /// <summary>The maximum value of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximum")]
        public virtual string Maximum {
            get {
                return this._maximum;
            }
            set {
                this._maximum = value;
            }
        }
        
        /// <summary>The minimum value of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minimum")]
        public virtual string Minimum {
            get {
                return this._minimum;
            }
            set {
                this._minimum = value;
            }
        }
        
        /// <summary>The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pattern")]
        public virtual string Pattern {
            get {
                return this._pattern;
            }
            set {
                this._pattern = value;
            }
        }
        
        /// <summary>If this is a schema for an object, list the schema for each property of this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("properties")]
        public virtual JsonSchema.PropertiesData Properties {
            get {
                return this._properties;
            }
            set {
                this._properties = value;
            }
        }
        
        /// <summary>The value is read-only, generated by the service. The value can not be modified by the client. It the value is included in a POST, PUT or PATCH request, it will be ignored by the service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("readOnly")]
        public virtual System.Nullable<bool> ReadOnly {
            get {
                return this._readOnly;
            }
            set {
                this._readOnly = value;
            }
        }
        
        /// <summary>Whether this parameter may appear multiple times.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repeated")]
        public virtual System.Nullable<bool> Repeated {
            get {
                return this._repeated;
            }
            set {
                this._repeated = value;
            }
        }
        
        /// <summary>Whether the parameter is required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required {
            get {
                return this._required;
            }
            set {
                this._required = value;
            }
        }
        
        /// <summary>The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        /// <summary>Additional information about this property.</summary>
        public class AnnotationsData {
            
            private System.Collections.Generic.IList<string> _required;
            
            /// <summary>A list of methods for which this property is required on requests.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("required")]
            public virtual System.Collections.Generic.IList<string> Required {
                get {
                    return this._required;
                }
                set {
                    this._required = value;
                }
            }
        }
        
        /// <summary>If this is a schema for an object, list the schema for each property of this object.</summary>
        public class PropertiesData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
    }
    
    public class RestDescription : Google.Apis.Requests.IDirectResponseSchema {
        
        private RestDescription.AuthData _auth;
        
        private string _basePath;
        
        private string _baseUrl;
        
        private string _batchPath;
        
        private string _canonicalName;
        
        private string _description;
        
        private string _discoveryVersion;
        
        private string _documentationLink;
        
        private string _etag;
        
        private System.Collections.Generic.IList<string> _features;
        
        private RestDescription.IconsData _icons;
        
        private string _id;
        
        private string _kind;
        
        private System.Collections.Generic.IList<string> _labels;
        
        private RestDescription.MethodsData _methods;
        
        private string _name;
        
        private RestDescription.ParametersData _parameters;
        
        private string _protocol;
        
        private RestDescription.ResourcesData _resources;
        
        private string _revision;
        
        private string _rootUrl;
        
        private RestDescription.SchemasData _schemas;
        
        private string _servicePath;
        
        private string _title;
        
        private string _version;
        
        /// <summary>Authentication information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("auth")]
        public virtual RestDescription.AuthData Auth {
            get {
                return this._auth;
            }
            set {
                this._auth = value;
            }
        }
        
        /// <summary>[DEPRECATED] The base path for REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basePath")]
        public virtual string BasePath {
            get {
                return this._basePath;
            }
            set {
                this._basePath = value;
            }
        }
        
        /// <summary>[DEPRECATED] The base URL for REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baseUrl")]
        public virtual string BaseUrl {
            get {
                return this._baseUrl;
            }
            set {
                this._baseUrl = value;
            }
        }
        
        /// <summary>The path for REST batch requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("batchPath")]
        public virtual string BatchPath {
            get {
                return this._batchPath;
            }
            set {
                this._batchPath = value;
            }
        }
        
        /// <summary>Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canonicalName")]
        public virtual string CanonicalName {
            get {
                return this._canonicalName;
            }
            set {
                this._canonicalName = value;
            }
        }
        
        /// <summary>The description of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Indicate the version of the Discovery API used to generate this doc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("discoveryVersion")]
        public virtual string DiscoveryVersion {
            get {
                return this._discoveryVersion;
            }
            set {
                this._discoveryVersion = value;
            }
        }
        
        /// <summary>A link to human readable documentation for the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentationLink")]
        public virtual string DocumentationLink {
            get {
                return this._documentationLink;
            }
            set {
                this._documentationLink = value;
            }
        }
        
        /// <summary>The etag for this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of supported features for this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<string> Features {
            get {
                return this._features;
            }
            set {
                this._features = value;
            }
        }
        
        /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icons")]
        public virtual RestDescription.IconsData Icons {
            get {
                return this._icons;
            }
            set {
                this._icons = value;
            }
        }
        
        /// <summary>The id of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The kind for this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Labels for the status of this API, such as labs or deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<string> Labels {
            get {
                return this._labels;
            }
            set {
                this._labels = value;
            }
        }
        
        /// <summary>API-level methods for this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("methods")]
        public virtual RestDescription.MethodsData Methods {
            get {
                return this._methods;
            }
            set {
                this._methods = value;
            }
        }
        
        /// <summary>The name of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>Common parameters that apply across all apis.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual RestDescription.ParametersData Parameters {
            get {
                return this._parameters;
            }
            set {
                this._parameters = value;
            }
        }
        
        /// <summary>The protocol described by this document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("protocol")]
        public virtual string Protocol {
            get {
                return this._protocol;
            }
            set {
                this._protocol = value;
            }
        }
        
        /// <summary>The resources in this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual RestDescription.ResourcesData Resources {
            get {
                return this._resources;
            }
            set {
                this._resources = value;
            }
        }
        
        /// <summary>The version of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revision")]
        public virtual string Revision {
            get {
                return this._revision;
            }
            set {
                this._revision = value;
            }
        }
        
        /// <summary>The root url under which all API services live.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootUrl")]
        public virtual string RootUrl {
            get {
                return this._rootUrl;
            }
            set {
                this._rootUrl = value;
            }
        }
        
        /// <summary>The schemas for this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemas")]
        public virtual RestDescription.SchemasData Schemas {
            get {
                return this._schemas;
            }
            set {
                this._schemas = value;
            }
        }
        
        /// <summary>The base path for all REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servicePath")]
        public virtual string ServicePath {
            get {
                return this._servicePath;
            }
            set {
                this._servicePath = value;
            }
        }
        
        /// <summary>The title of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>The version of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version {
            get {
                return this._version;
            }
            set {
                this._version = value;
            }
        }
        
        /// <summary>Authentication information.</summary>
        public class AuthData {
            
            private AuthData.Oauth2Data _oauth2;
            
            /// <summary>OAuth 2.0 authentication information.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("oauth2")]
            public virtual AuthData.Oauth2Data Oauth2 {
                get {
                    return this._oauth2;
                }
                set {
                    this._oauth2 = value;
                }
            }
            
            /// <summary>OAuth 2.0 authentication information.</summary>
            public class Oauth2Data {
                
                private Oauth2Data.ScopesData _scopes;
                
                /// <summary>Available OAuth 2.0 scopes.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
                public virtual Oauth2Data.ScopesData Scopes {
                    get {
                        return this._scopes;
                    }
                    set {
                        this._scopes = value;
                    }
                }
                
                /// <summary>Available OAuth 2.0 scopes.</summary>
                public class ScopesData : System.Collections.Generic.Dictionary<string, ScopesData.ScopesDataSchema> {
                    
                    /// <summary>The scope value.</summary>
                    public class ScopesDataSchema {
                        
                        private string _description;
                        
                        /// <summary>Description of scope.</summary>
                        [Newtonsoft.Json.JsonPropertyAttribute("description")]
                        public virtual string Description {
                            get {
                                return this._description;
                            }
                            set {
                                this._description = value;
                            }
                        }
                    }
                }
            }
        }
        
        /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
        public class IconsData {
            
            private string _x16;
            
            private string _x32;
            
            /// <summary>The url of the 16x16 icon.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("x16")]
            public virtual string X16 {
                get {
                    return this._x16;
                }
                set {
                    this._x16 = value;
                }
            }
            
            /// <summary>The url of the 32x32 icon.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("x32")]
            public virtual string X32 {
                get {
                    return this._x32;
                }
                set {
                    this._x32 = value;
                }
            }
        }
        
        /// <summary>API-level methods for this API.</summary>
        public class MethodsData : System.Collections.Generic.Dictionary<string, RestMethod> {
        }
        
        /// <summary>Common parameters that apply across all apis.</summary>
        public class ParametersData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
        
        /// <summary>The resources in this API.</summary>
        public class ResourcesData : System.Collections.Generic.Dictionary<string, RestResource> {
        }
        
        /// <summary>The schemas for this API.</summary>
        public class SchemasData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
    }
    
    public class RestMethod {
        
        private string _description;
        
        private string _httpMethod;
        
        private string _id;
        
        private RestMethod.MediaUploadData _mediaUpload;
        
        private System.Collections.Generic.IList<string> _parameterOrder;
        
        private RestMethod.ParametersData _parameters;
        
        private string _path;
        
        private RestMethod.RequestData _request;
        
        private RestMethod.ResponseData _response;
        
        private System.Collections.Generic.IList<string> _scopes;
        
        private System.Nullable<bool> _supportsMediaDownload;
        
        private System.Nullable<bool> _supportsMediaUpload;
        
        private System.Nullable<bool> _supportsSubscription;
        
        /// <summary>Description of this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>HTTP method used by this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpMethod")]
        public virtual string HttpMethod {
            get {
                return this._httpMethod;
            }
            set {
                this._httpMethod = value;
            }
        }
        
        /// <summary>A unique ID for this method. This property can be used to match methods between different versions of Discovery.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Media upload parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaUpload")]
        public virtual RestMethod.MediaUploadData MediaUpload {
            get {
                return this._mediaUpload;
            }
            set {
                this._mediaUpload = value;
            }
        }
        
        /// <summary>Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the &quot;most-significant&quot; parameter appears first.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterOrder")]
        public virtual System.Collections.Generic.IList<string> ParameterOrder {
            get {
                return this._parameterOrder;
            }
            set {
                this._parameterOrder = value;
            }
        }
        
        /// <summary>Details for all parameters in this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual RestMethod.ParametersData Parameters {
            get {
                return this._parameters;
            }
            set {
                this._parameters = value;
            }
        }
        
        /// <summary>The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path {
            get {
                return this._path;
            }
            set {
                this._path = value;
            }
        }
        
        /// <summary>The schema for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("request")]
        public virtual RestMethod.RequestData Request {
            get {
                return this._request;
            }
            set {
                this._request = value;
            }
        }
        
        /// <summary>The schema for the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual RestMethod.ResponseData Response {
            get {
                return this._response;
            }
            set {
                this._response = value;
            }
        }
        
        /// <summary>OAuth 2.0 scopes applicable to this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes {
            get {
                return this._scopes;
            }
            set {
                this._scopes = value;
            }
        }
        
        /// <summary>Whether this method supports media downloads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportsMediaDownload")]
        public virtual System.Nullable<bool> SupportsMediaDownload {
            get {
                return this._supportsMediaDownload;
            }
            set {
                this._supportsMediaDownload = value;
            }
        }
        
        /// <summary>Whether this method supports media uploads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportsMediaUpload")]
        public virtual System.Nullable<bool> SupportsMediaUpload {
            get {
                return this._supportsMediaUpload;
            }
            set {
                this._supportsMediaUpload = value;
            }
        }
        
        /// <summary>Whether this method supports subscriptions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportsSubscription")]
        public virtual System.Nullable<bool> SupportsSubscription {
            get {
                return this._supportsSubscription;
            }
            set {
                this._supportsSubscription = value;
            }
        }
        
        /// <summary>Media upload parameters.</summary>
        public class MediaUploadData {
            
            private System.Collections.Generic.IList<string> _accept;
            
            private string _maxSize;
            
            private MediaUploadData.ProtocolsData _protocols;
            
            /// <summary>MIME Media Ranges for acceptable media uploads to this method.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("accept")]
            public virtual System.Collections.Generic.IList<string> Accept {
                get {
                    return this._accept;
                }
                set {
                    this._accept = value;
                }
            }
            
            /// <summary>Maximum size of a media upload, such as &quot;1MB&quot;, &quot;2GB&quot; or &quot;3TB&quot;.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("maxSize")]
            public virtual string MaxSize {
                get {
                    return this._maxSize;
                }
                set {
                    this._maxSize = value;
                }
            }
            
            /// <summary>Supported upload protocols.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("protocols")]
            public virtual MediaUploadData.ProtocolsData Protocols {
                get {
                    return this._protocols;
                }
                set {
                    this._protocols = value;
                }
            }
            
            /// <summary>Supported upload protocols.</summary>
            public class ProtocolsData {
                
                private ProtocolsData.ResumableData _resumable;
                
                private ProtocolsData.SimpleData _simple;
                
                /// <summary>Supports the Resumable Media Upload protocol.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("resumable")]
                public virtual ProtocolsData.ResumableData Resumable {
                    get {
                        return this._resumable;
                    }
                    set {
                        this._resumable = value;
                    }
                }
                
                /// <summary>Supports uploading as a single HTTP request.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("simple")]
                public virtual ProtocolsData.SimpleData Simple {
                    get {
                        return this._simple;
                    }
                    set {
                        this._simple = value;
                    }
                }
                
                /// <summary>Supports the Resumable Media Upload protocol.</summary>
                public class ResumableData {
                    
                    private System.Nullable<bool> _multipart;
                    
                    private string _path;
                    
                    /// <summary>True if this endpoint supports uploading multipart media.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("multipart")]
                    public virtual System.Nullable<bool> Multipart {
                        get {
                            return this._multipart;
                        }
                        set {
                            this._multipart = value;
                        }
                    }
                    
                    /// <summary>The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("path")]
                    public virtual string Path {
                        get {
                            return this._path;
                        }
                        set {
                            this._path = value;
                        }
                    }
                }
                
                /// <summary>Supports uploading as a single HTTP request.</summary>
                public class SimpleData {
                    
                    private System.Nullable<bool> _multipart;
                    
                    private string _path;
                    
                    /// <summary>True if this endpoint supports upload multipart media.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("multipart")]
                    public virtual System.Nullable<bool> Multipart {
                        get {
                            return this._multipart;
                        }
                        set {
                            this._multipart = value;
                        }
                    }
                    
                    /// <summary>The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("path")]
                    public virtual string Path {
                        get {
                            return this._path;
                        }
                        set {
                            this._path = value;
                        }
                    }
                }
            }
        }
        
        /// <summary>Details for all parameters in this method.</summary>
        public class ParametersData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
        
        /// <summary>The schema for the request.</summary>
        public class RequestData {
            
            private string _Ref;
            
            /// <summary>Schema ID for the request schema.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("$ref")]
            public virtual string Ref {
                get {
                    return this._Ref;
                }
                set {
                    this._Ref = value;
                }
            }
        }
        
        /// <summary>The schema for the response.</summary>
        public class ResponseData {
            
            private string _Ref;
            
            /// <summary>Schema ID for the response schema.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("$ref")]
            public virtual string Ref {
                get {
                    return this._Ref;
                }
                set {
                    this._Ref = value;
                }
            }
        }
    }
    
    public class RestResource {
        
        private RestResource.MethodsData _methods;
        
        private RestResource.ResourcesData _resources;
        
        /// <summary>Methods on this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("methods")]
        public virtual RestResource.MethodsData Methods {
            get {
                return this._methods;
            }
            set {
                this._methods = value;
            }
        }
        
        /// <summary>Sub-resources on this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual RestResource.ResourcesData Resources {
            get {
                return this._resources;
            }
            set {
                this._resources = value;
            }
        }
        
        /// <summary>Methods on this resource.</summary>
        public class MethodsData : System.Collections.Generic.Dictionary<string, RestMethod> {
        }
        
        /// <summary>Sub-resources on this resource.</summary>
        public class ResourcesData : System.Collections.Generic.Dictionary<string, RestResource> {
        }
    }
}
namespace Google.Apis.Discovery.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class DiscoveryService : Google.Apis.Discovery.BaseClientService {
        
        public const string Version = "v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> _serviceParameters;
        
        public DiscoveryService(Google.Apis.Discovery.BaseClientService.Initializer initializer) : 
                base(initializer) {
            this._apis = new ApisResource(this, Authenticator);
            this.InitParameters();
        }
        
        public DiscoveryService() : 
                this(new Google.Apis.Discovery.BaseClientService.Initializer()) {
        }
        
        public override System.Collections.Generic.IList<string> Features {
            get {
                return new string[0];
            }
        }
        
        public override string Name {
            get {
                return "discovery";
            }
        }
        
        public override string BaseUri {
            get {
                return "https://www.googleapis.com/discovery/v1/";
            }
        }
        
        public override System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> ServiceParameters {
            get {
                return this._serviceParameters;
            }
        }
        
        public override Google.Apis.Requests.IRequest CreateRequest(Google.Apis.Requests.IClientServiceRequest serviceRequest) {
            Google.Apis.Requests.IRequest request = Google.Apis.Requests.Request.CreateRequest(this, serviceRequest);
            if ((string.IsNullOrEmpty(ApiKey) == false)) {
                request = request.WithKey(this.ApiKey);
            }
            return request.WithAuthentication(Authenticator);
        }
        
        private void InitParameters() {
            System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
            parameters.Add("alt", Google.Apis.Util.Utilities.CreateRuntimeParameter("alt", false, "query", "json", null, new string[] {
                            "json"}));
            parameters.Add("fields", Google.Apis.Util.Utilities.CreateRuntimeParameter("fields", false, "query", null, null, new string[0]));
            parameters.Add("key", Google.Apis.Util.Utilities.CreateRuntimeParameter("key", false, "query", null, null, new string[0]));
            parameters.Add("oauth_token", Google.Apis.Util.Utilities.CreateRuntimeParameter("oauth_token", false, "query", null, null, new string[0]));
            parameters.Add("prettyPrint", Google.Apis.Util.Utilities.CreateRuntimeParameter("prettyPrint", false, "query", "true", null, new string[0]));
            parameters.Add("quotaUser", Google.Apis.Util.Utilities.CreateRuntimeParameter("quotaUser", false, "query", null, null, new string[0]));
            parameters.Add("userIp", Google.Apis.Util.Utilities.CreateRuntimeParameter("userIp", false, "query", null, null, new string[0]));
            this._serviceParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
        }
    }
    
    public class ApisResource {
        
        private DiscoveryService service;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Resource = "apis";
        
        public ApisResource(DiscoveryService service, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.service = service;
            this.authenticator = authenticator;
        }
        
        /// <summary>Retrieve the description of a particular version of an api.</summary>
        /// <param name="api">Required - The name of the API.</param>
        /// <param name="version">Required - The version of the API.</param>
        public virtual GetRestRequest GetRest(string api, string version) {
            return new GetRestRequest(service, api, version);
        }
        
        /// <summary>Retrieve the list of APIs supported at this endpoint.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Only include APIs with a matching label, such as &apos;graduated&apos; or &apos;labs&apos;.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Label {
            
            /// <summary>APIs that have been deprecated.</summary>
            [Google.Apis.Util.StringValueAttribute("deprecated")]
            Deprecated,
            
            /// <summary>Supported APIs that have graduated from labs.</summary>
            [Google.Apis.Util.StringValueAttribute("graduated")]
            Graduated,
            
            /// <summary>APIs that are experimental</summary>
            [Google.Apis.Util.StringValueAttribute("labs")]
            Labs,
        }
        
        public class GetRestRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Discovery.v1.Data.RestDescription> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _api;
            
            private string _version;
            
            public GetRestRequest(Google.Apis.Discovery.IClientService service, string api, string version) : 
                    base(service) {
                this._api = api;
                this._version = version;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>The name of the API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("api", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Api {
                get {
                    return this._api;
                }
            }
            
            /// <summary>The version of the API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Version {
                get {
                    return this._version;
                }
            }
            
            public override string ResourcePath {
                get {
                    return "apis";
                }
            }
            
            public override string MethodName {
                get {
                    return "getRest";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "GET";
                }
            }
            
            public override string RestPath {
                get {
                    return "apis/{api}/{version}/rest";
                }
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("api", Google.Apis.Util.Utilities.CreateRuntimeParameter("api", true, "path", null, null, new string[0]));
                parameters.Add("version", Google.Apis.Util.Utilities.CreateRuntimeParameter("version", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Discovery.v1.Data.DirectoryList> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private System.Nullable<Label> _label;
            
            private string _name;
            
            private System.Nullable<bool> _preferred;
            
            public ListRequest(Google.Apis.Discovery.IClientService service) : 
                    base(service) {
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Only include APIs with a matching label, such as 'graduated' or 'labs'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("label", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Label> Label {
                get {
                    return this._label;
                }
                set {
                    this._label = value;
                }
            }
            
            /// <summary>Only include APIs with the given name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name {
                get {
                    return this._name;
                }
                set {
                    this._name = value;
                }
            }
            
            /// <summary>Return only the preferred version of an API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("preferred", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Preferred {
                get {
                    return this._preferred;
                }
                set {
                    this._preferred = value;
                }
            }
            
            public override string ResourcePath {
                get {
                    return "apis";
                }
            }
            
            public override string MethodName {
                get {
                    return "list";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "GET";
                }
            }
            
            public override string RestPath {
                get {
                    return "apis";
                }
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("label", Google.Apis.Util.Utilities.CreateRuntimeParameter("label", false, "query", null, null, new string[] {
                                "deprecated",
                                "graduated",
                                "labs"}));
                parameters.Add("name", Google.Apis.Util.Utilities.CreateRuntimeParameter("name", false, "query", null, null, new string[0]));
                parameters.Add("preferred", Google.Apis.Util.Utilities.CreateRuntimeParameter("preferred", false, "query", "false", null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
    }
    
    public partial class DiscoveryService {
        
        private const string Resource = "";
        
        private ApisResource _apis;
        
        private Google.Apis.Discovery.IClientService service {
            get {
                return this;
            }
        }
        
        public virtual ApisResource Apis {
            get {
                return this._apis;
            }
        }
    }
}
