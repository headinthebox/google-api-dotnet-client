<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Apis.Tools.CodeGen</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardExecuteMethodServiceDecorator" -->
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.IServiceDecorator">
            <summary>
            IServiceDecorators will decorate the generated Service class.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardExecuteMethodServiceDecorator.CreateRequestLocalVar">
            <summary>
            <code>Google.Apis.Requests.Request request = this.genericService.CreateRequest(resource, method);</code>
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardExecuteMethodServiceDecorator.CreateWithDeveloperKey">
            <summary>
            if (string.IsNullOrEmpty(DeveloperKey) == false)
               request = request.WithDeveloperKey(DeveloperKey)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.GeneratorUtils">
            <summary>
            A collection of static utility methods for generators and decorators to use. 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.GeneratorUtils.GetParameterName(Google.Apis.Discovery.IParameter,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            From the Parameter and its placement constructs a safe name.
            </summary>
            <param name="parameter">
                The Parameter
            </param>
            <param name="paramNumber">The order of this parameter used if the name is not usable</param>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardConstructorResourceDecorator">
            <summary>
            Creates a constructor for this resource, this is a standard decorator so this either needs to be 
            present or another decorator that creates a constructor with the same signature put in.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IResourceDecorator">
            <summary>
            Classes that implement this interface will be called when building a resource class.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IResourceDecorator.DecorateClass(Google.Apis.Discovery.IResource,System.String,System.CodeDom.CodeTypeDeclaration,Google.Apis.Tools.CodeGen.Generator.ResourceClassGenerator,System.String,System.Collections.Generic.IEnumerable{Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IResourceDecorator})">
            <summary>
            Adds code to the resourceClass based on the resource.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IResourceDecorator.DecorateMethodBeforeExecute(Google.Apis.Discovery.IResource,Google.Apis.Discovery.IMethod,System.CodeDom.CodeMemberMethod)">
            <summary>
            Adds code to a method just before execution of the execute method.
            This can be used for logging, instramenting or modifing the parameters before execution.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IResourceDecorator.DecorateMethodAfterExecute(Google.Apis.Discovery.IResource,Google.Apis.Discovery.IMethod,System.CodeDom.CodeMemberMethod)">
            <summary>
            Adds code to a method just after execution of the execute method.
            This can be used for logging, instramenting or modifing the return value after execution.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IMethodCommentCreator">
            <summary> 
              Abstract out the process for creating comments on methods.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.DefaultEnglishCommentCreator">
            <summary>
            The default implementation for IMethodCommentCreator. Creates comments based on meta data and description 
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardResourceNameResourceDecorator">
            <summary>
            Adds the resource name as a private const field to the generated resource class.
            This is a standard class so this need to be present or another decorator that add a field 
            with the same name and type.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardResourceNameResourceDecorator.CreateResourceNameConst(System.String)">
            <summary>
            Adds <code>private const string Resource = "activities";</code> to the resource class
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.SchemaDecorator.ISchemaDecorator">
            <summary>
            Classes that implement this interface will add code to the 
            typeDeclaration based on the ISchema passed in.
            Example on class may add fields to the typeDeclaration to 
            represent each of the fields described in the schema
            </summary>
            <seealso cref="T:Google.Apis.Discovery.Schema.ISchema"/>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceContainerDecorator.IResourceContainerDecorator">
            <summary>
            Decorates ResourceContainers, a resourceContainer is any object
            that can contain Resources, a service is a resourceContainer 
            also a Resource is a resource container since it can 
            contain Resources.
            </summary>
            <seealso cref="T:Google.Apis.Discovery.IResourceContainer"/>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceContainerDecorator.IResourceContainerDecorator.DecorateClass(Google.Apis.Discovery.IResourceContainer,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Adds code to the containerClass based on the definitions contained in the resourceContainer.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardServiceFieldServiceDecorator">
            <summary>
            Declars the fields genericService and authenticator
            <code>
                private Google.Apis.Discovery.IService genericService;
                private Google.Apis.Authentication.IAuthenticator authenticator;
            </code>
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.SchemaDecorator.NewtonSoftPropertyAttributeDecorator">
            <summary>
            Adds Newtonsoft.Json.JsonPropertyAttribute to each property.
            Requires StandardPropertyDecorator or similar to have run before this. 
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.SchemaDecorator.INestedClassSchemaDecorator">
            <summary>
            A given schema may contain nested classes, classes that implement this method may 
            decorate those internal classes, often classes that implement this 
            interface will also implement ISchemaDecorator
            </summary>
            <seealso cref="T:Google.Apis.Tools.CodeGen.Decorator.SchemaDecorator.ISchemaDecorator"/> 
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.EasyConstructServiceDecorator">
            <summary>
            Adds a convenience zero argument constructor to the service.
            Using the AuthenticatorFactory to get the IAuthenticator and using a DiscoverService based on a WebDiscoveryDevice
            This is an optional decorator.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.EasyConstructServiceDecorator.GetVersionSpecificParameter(Google.Apis.Discovery.IService,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Returns a CodeExpression that creates a Discovery specific FactoryPatameter.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.EasyConstructServiceDecorator.GetAuthenticator">
            <summary>
            Generatrs the following code
            <code>
                Authentication.AuthenticatorFactory.
                    GetInstance().
                    GetRegisteredAuthenticator();   
            </code>
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.SchemaAwearExecuteMethodDecorator">
            <summary>
            Adds an execute method to the service which accepts an object and Serilises it to Json. 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.SchemaAwearExecuteMethodDecorator.CreateExecuteMethod">
            <summary>
            Adds an execute method to the service which accepts an object and Serilises it to Json.
            <code>
                public Stream Execute(string resource, string method, object body, IDictonary&lt;string, string&gt; parameters) {
                    return execute(resource, method, ObjectToJson(body), parameters);
                }
            </code> 
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Generator.ResourceClassGenerator">
            <summary>
            Generates a class for one Resource. This uses the passed in decorators to do the work.
            </summary>
            <seealso cref="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.IResourceDecorator"/>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.ResourceClassGenerator.CreateClass">
            <summary>
            Create the class for a given resource and add all the methods.
            </summary>
            <param name="res">
            A <see cref="!:Resource"/>
            </param>
            <returns>
            A <see cref="T:System.CodeDom.CodeTypeDeclaration"/>
            </returns>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardConstructServiceDecorator">
            <summary>
            Adds the standard constuctor to the service class, 
                assing genericService and authenticator to local vars
                and create a Resouce for each resource mentioned in the discovery document.
            e.g.
                <code>
                public BuzzService(IService genericService, IAuthenticator authenticator) {
                   this.genericService = genericService;
                   this.authenticator = authenticator;
                   this.activities = new Activities(this);
                   this.comments = new Comments(this);
                   this.groups = new Groups(this);
                   this.people = new People(this);
                   this.photos = new Photos(this);
                   this.related = new Related(this);
               }
                </code>
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardConstructServiceDecorator.AddResourceAssignments(Google.Apis.Discovery.IService,System.CodeDom.CodeMemberMethod)">
            <summary>
                Adds an assignment line for each Resource e.g.
                <code>
                    this.people = new People(this);
                </code>
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.StandardConstructServiceDecorator.CreateConstructorWithArgs">
            <summary>
            Creates the constructor with two arguments, ISerivce and IAuthenticator.
            Then assignes these to local variables.
            e.g.
                <code>
                    public BuzzService(IService genericService, IAuthenticator authenticator) {
                        this.genericService = genericService;
                        this.authenticator = authenticator;
                </code>
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.DictonaryOptionalParameterResourceDecorator">
            <summary>
            An optional Decorator that adds a Method to the resource class for each Method.
            The method added will have a parameter for each of the required parameters, all the optional parameters will be 
            passed in a IDictionary&lt;string,string&gt;
            e.g.
            <code>
                public virtual Stream Search(IDictionary&lt;string, string&gt; parameters)
            </code>
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.ResourceBaseGenerator.CreateExecuteCall(Google.Apis.Discovery.IMethod)">
            <summary>
            this.service.ExecuteRequest(...);
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.ResourceBaseGenerator.CreateExecuteRequest(Google.Apis.Discovery.IMethod)">
            <summary>
            ret = this.service.ExecuteRequest(...);
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.DecoratorUtil">
            <summary>
            Helper class for all decorators
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.DecoratorUtil.AddAutoProperty``1(System.CodeDom.CodeTypeDeclaration,System.String,System.String)">
            <summary>
            Creates and adds a public auto-property (property and backening field) to the class
            </summary>
            <typeparam name="TProperty">Type used for the propery</typeparam>
            <param name="serviceClass"></param>
            <param name="name"></param>
            <param name="summaryComment"></param>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.DecoratorUtil.CreateBackeningField``1(System.CodeDom.CodeTypeDeclaration,System.String)">
            <summary>
            Creates a backening field for the name provided
            </summary>
            <typeparam name="TProperty">Type used for the propery</typeparam>
            <param name="serviceClass"></param>
            <param name="name">The name of the property</param>
            <returns></returns>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.VersionInformationServiceDecorator">
            <summary>
            Adds private constants Version (VersionName), Name (NameName) and BaseUri (BaseUriName) 
            to the ServiceClass.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.SchemaDecorator.StandardPropertyDecorator">
            <summary>
            Adds all the properties (getters and setters) for schema classes.
            This depends on fields being added by StandardFieldDecorator, or similar.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.INestedClassProvider">
            <summary>
            Given a definition for a class returns a name and garentiees that 
            that class will be generated in the appropreate scope. 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.INestedClassProvider.GetClassName(Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            Given a definition for a class returns a name and garentiees that 
            that class will be generated in the appropreate scope.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer">
            <summary>
            Supplies ObjectToJson method in generated services. Using Newtonsoft.Json.JsonSerilizer
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer.CreateJsonSerializerField">
            <summary>
            Creates a JsonSerializer field.
            <code>private JsonSerializer newtonJsonSerilizer = null;</code>
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer.CreateSerilizerCreationBlock">
            <summary>
            Creates the following block of code
             <code>
                JsonSerializerSettings settings = new JsonSerializerSettings();
                settings.NullValueHandling = NullValueHandling.Ignore;
                this.newtonwJsonSerilizer = JsonSerializer.Create(settings);
             </code>
            </summary>
            <returns>
            A <see cref="T:System.CodeDom.CodeStatementCollection"/>
            </returns>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer.CreateObjectToJson">
            <summary>
             Creates ObjectToJson method
             <code>
                public string ObjectToJson(object obj)
                {
                    TextWriter tw = new StringWriter();
                    NewtonJsonSerilizer.Serialize(tw, obj);
                    return tw.ToString()
                }
             </code>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer.CreateJsonToObject" -->
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer.CreateRethrowStatment">
            <summary>
            <code>throw new ApplicationException(
               string.Format("Failed to generate object of type[{0}] from Json[{1}]",typeof(TOutput).Name,str),ex);
            </code> 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.NewtonsoftJsonSerializer.CreateReturnStatment">
            <summary>
             create the following code
             <code>
               StandardResponse&lt;TOutput&gt; response = 
                   Newtonsoft.Json.JsonConvert.DeserializeObject&lt;StandardResponse&lt;TOutput&gt;&gt;(str);
               if (response.Data == null)
               {
                     throw new ApplicationException(string.Format("Failed to get response from stream, error was [{0}]",response.Error));
               }
               return response.Data;
             </code>
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.GoogleSchemaGenerator">
            <summary>
            For a given service, creates a namespace and generates a class for each schema defined in that service.
            Using the ISchemaDecorators provided.  
            </summary>
        </member>
        <member name="F:Google.Apis.Tools.CodeGen.Generator.SchemaGenerator.NestedClassGenerator.uniquefier">
            <summary>A string to make this nested class names unique</summary>
        </member>
        <member name="F:Google.Apis.Tools.CodeGen.Generator.SchemaGenerator.NestedClassGenerator.schemaOrder">
            <summary>
            Maps Schemas to the index they appared so schemas found multiple time will resolve to the same name.
            This also allows us to generate the internal classes at the end instead of as we find them.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.SchemaGenerator.NestedClassGenerator.GetClassName(Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            Gets a class name as a CodeTypeReference for the given schema of the form "IntenalClassN" where 
            N is an integer. Given the same JsonSchema this will return the same classname.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceContainerDecorator.StandardResourcePropertyServiceDecorator">
            <summary>
            Foreach resource that is part of this service this decorator will add a field
            and a property getter. e.g.
                <code>
                    private Activities activities;
                    private Comments comments;
                    public virtual Activities Activities {get {return this.activities;}}
                    public virtual Comments Comments {get {return this.comments;}}
                </code> 
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Generator.ServiceClassGenerator">
            <summary>
            Responsible for generating the Service class, this is handled primarly by calling
            a secsesion of IServiceDecorator's 
            </summary>
            <seealso cref="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.IServiceDecorator"/>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardServiceFieldResourceDecorator">
            <summary>
            Adds a reference to the IRequestExecutor, this is a standard decorator so must be present 
            or another Decorator that provides adds the same field.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardServiceFieldResourceDecorator.CreateServiceField">
            <summary>
            Adds <code>private BuzzService service;</code> to the resource class.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.SchemaDecorator.ArraySchemaDecorator">
            <summary>
            Decorator for schemas which represent an array themself (type: array)
            This Decorator constructs an IList implementation for the schema
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.MethodGeneratorUtils.GetRequiredParameters(Google.Apis.Discovery.IMethod)">
            <summary>
            Return all required IParemters from the given method.
            Sorted alphabeticly by name 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.MethodGeneratorUtils.GetOptionalParameters(Google.Apis.Discovery.IMethod)">
            <summary>
            Return all optional IParemters from the given method.
            Sorted alphabeticly by name 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.MethodGeneratorUtils.GetAllParametersSorted(Google.Apis.Discovery.IMethod)">
            <summary>
            Return all IParemters from the given method.
            sorted by required then optional, alphabeticly within those groupings 
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.MethodGeneratorUtils.HasRequiredParameters(Google.Apis.Discovery.IMethod)">
            <summary>
            True if any of the parameters are required
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Generator.MethodGeneratorUtils.HasOptionalParameters(Google.Apis.Discovery.IMethod)">
            <summary>
            True if any of the parameters are optional
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.DeveloperKeyServiceDecorator">
            <summary>
            Declares the DeveloperKey property and field
            <code>
                private string developerKey;
                public virtual string DeveloperKey { ... }
            </code>
            </summary>
        </member>
        <member name="F:Google.Apis.Tools.CodeGen.Decorator.ServiceDecorator.DeveloperKeyServiceDecorator.DeveloperKeyPropertyName">
            <summary>
            Defines the name of the "DeveloperKey" property
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardMethodResourceDecorator">
            <summary>
            Adds the standard methods to the given Resource class, 
            one method for each one described in the discovery document.
            There will be parameters added for each of the parameters described in the discovery document
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardMethodResourceDecorator.#ctor">
            <summary>
            Constructs a StandardMethodResourceDecorator which creates methods with body parameter as string 
            and return type as System.io.Stream.
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardMethodResourceDecorator.ResourceGenerator.CreateExecuteRequest(Google.Apis.Discovery.IMethod)">
            <summary>
            [ReturnType] ret = this.service.JsonToObject&lt;ReturnType&gt;(this.service.Execute(...));
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardMethodResourceDecorator.ResourceGenerator.DeclareParamaterDictionary" -->
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.StandardMethodResourceDecorator.IObjectTypeProvider">
            <summary>
            Implementors of this interface will know what the return type of a given method should be
            and what the type of the body parameter should be.
            For example the return type may be System.IO.String or a 
            generated type based on the schema section of the discovery document,
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.Decorator.ResourceDecorator.Log4NetResourceDecorator">
            <summary>
            An optional decorator that adds logging to the Resoruces as they are called.
            This uses log4Net as the logging framework.
            </summary>
        </member>
        <member name="T:Google.Apis.Tools.CodeGen.GoogleServiceGenerator">
            <summary>
            The main entry for generating code to access google services.
            For a default generation try calling 
            <example>
                <code>
                    GoogleServiceGenerator.GenerateService("buzz", "v1", "Com.Example.Namespace", "CSharp", "c:\example\");
                </code>
            </example>
            </summary>
        </member>
        <member name="F:Google.Apis.Tools.CodeGen.GoogleServiceGenerator.GoogleDiscoveryURL">
            <summary>
            Defines the URL used to discover Google APIs
            {0}: Service name
            {1}: Version
            </summary>
        </member>
        <member name="M:Google.Apis.Tools.CodeGen.GoogleServiceGenerator.GenerateService(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Generates the given service saving to the outputFile in the language passed in.
            </summary>
        </member>
    </members>
</doc>
