// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class AdClient {
        
        private string id;
        
        private string kind;
        
        private string name;
        
        private bool supportsReporting;
        
        /// <summary>Unique identifier of this ad client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Kind of resource this is, in this case adsense#adClient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Name of this ad client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        /// <summary>Whether this ad client supports being reported on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportsReporting")]
        public virtual bool SupportsReporting {
            get {
                return this.supportsReporting;
            }
            set {
                this.supportsReporting = value;
            }
        }
    }
    
    public class AdClients {
        
        private string etag;
        
        private IList<AdClient> items;
        
        private string kind;
        
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string Etag {
            get {
                return this.etag;
            }
            set {
                this.etag = value;
            }
        }
        
        /// <summary>The ad clients returned in this list response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<AdClient> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Kind of list this is, in this case adsense#adClients.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
    }
    
    public class AdUnit {
        
        private string code;
        
        private string id;
        
        private string kind;
        
        private string name;
        
        /// <summary>Code of this ad unit, not necessarily unique across ad clients.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual string Code {
            get {
                return this.code;
            }
            set {
                this.code = value;
            }
        }
        
        /// <summary>Unique identifier of this ad unit. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Kind of resource this is, in this case adsense#adUnit.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Name of this ad unit.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
    }
    
    public class AdUnits {
        
        private string etag;
        
        private IList<AdUnit> items;
        
        private string kind;
        
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string Etag {
            get {
                return this.etag;
            }
            set {
                this.etag = value;
            }
        }
        
        /// <summary>The ad units returned in this list response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<AdUnit> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Kind of list this is, in this case adsense#adUnits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
    }
    
    public class AdsenseReportsGenerateRequest {
        
        private string currency;
        
        private NestedClass1 dateRange;
        
        private IList<System.String> dimensions;
        
        private string locale;
        
        private IList<System.String> metrics;
        
        private NestedClass2 pagination;
        
        private NestedClass3 scope;
        
        private IList<NestedClass4> sorts;
        
        /// <summary>Optional currency to use when reporting on monetary metrics. Defaults to the account&apos;s currency if not set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currency")]
        public virtual string Currency {
            get {
                return this.currency;
            }
            set {
                this.currency = value;
            }
        }
        
        /// <summary>The date range to report on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("date_range")]
        public virtual NestedClass1 DateRange {
            get {
                return this.dateRange;
            }
            set {
                this.dateRange = value;
            }
        }
        
        /// <summary>Dimensions to base the report on, specifying the groupings to query from the items in the scope.  The dimensions to include in the report. Each dimension is a column on the left of the report, used to group the rows. Dimensions are columns with textual data.  Normally at least one dimension is specified, however it is possible to generate reports without dimensions, for example to find out the totals and averages of a particular query.  Possible dimension names:  DATE WEEK MONTH HOUR AD_CLIENT_ID AD_CLIENT_NAME PRODUCT_CODE PRODUCT_NAME AD_UNIT_ID AD_UNIT_CODE AD_UNIT_NAME AD_UNIT_SIZE_CODE AD_UNIT_SIZE_NAME CUSTOM_CHANNEL_ID CUSTOM_CHANNEL_CODE CUSTOM_CHANNEL_NAME URL_CHANNEL_ID URL_CHANNEL_NAME AD_FORMAT_CODE AD_FORMAT_NAME BRANDING_TYPE_CODE BRANDING_TYPE_NAME BUYER_NETWORK_ID BUYER_NETWORK_NAME BID_TYPE_CODE BID_TYPE_NAME DOMAIN_NAME COUNTRY_CODE COUNTRY_NAME TARGETING_TYPE_CODE TARGETING_TYPE_NAME</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual IList<System.String> Dimensions {
            get {
                return this.dimensions;
            }
            set {
                this.dimensions = value;
            }
        }
        
        /// <summary>Optional locale to use for translating report output to a local language. Defaults to &quot;en_US&quot; if not specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual string Locale {
            get {
                return this.locale;
            }
            set {
                this.locale = value;
            }
        }
        
        /// <summary>Metrics are the numeric columns to retrieve from the items in the scope. The values for each selected metric are accumulated across the selected dimensions.  Possible metric names:  PAGE_VIEWS PAGE_VIEWS_CTR PAGE_VIEWS_RPM AD_REQUESTS AD_REQUESTS_COVERAGE AD_REQUESTS_CTR AD_REQUESTS_RPM MATCHED_AD_REQUESTS MATCHED_AD_REQUESTS_CTR MATCHED_AD_REQUESTS_RPM INDIVIDUAL_AD_IMPRESSIONS INDIVIDUAL_AD_IMPRESSIONS_CTR INDIVIDUAL_AD_IMPRESSIONS_RPM CLICKS EARNINGS TOTAL_EARNINGS COST_PER_CLICK</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual IList<System.String> Metrics {
            get {
                return this.metrics;
            }
            set {
                this.metrics = value;
            }
        }
        
        /// <summary>Optionally specifies how to paginate the rows of the report output. If not defined, all rows of the report will be retrieved up to the available limit of 10,000 rows. If more rows are present in the report, multiple calls must be made, setting start_row to 10000 in the second call and so on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual NestedClass2 Pagination {
            get {
                return this.pagination;
            }
            set {
                this.pagination = value;
            }
        }
        
        /// <summary>The scope of the report is the items this report will scan to collect data to report on. It is either a list of ad client ids, ad unit ids, custom channel ids or URL channel ids identifying the objects to be part of the scope. Only one list may be specified. The specified list may contain any amount of items.  The type of the scope dictates what dimensions can be used in the report. If ad unit or channel dimensions are used, the corresponding type of scope must also be used. For example, if AD_UNIT_CODE is used as a dimension ad_unit_ids must be specified as the scope, with no other list given in the scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scope")]
        public virtual NestedClass3 Scope {
            get {
                return this.scope;
            }
            set {
                this.scope = value;
            }
        }
        
        /// <summary>Columns to sort the report result on. The report is sorted by the first specified column, then by the second (if any), and so on. Sort columns can be either dimensions or metrics. The rows of the table can be in any order if no sort columns are specified.  Possible column names:  DATE WEEK MONTH HOUR AD_CLIENT_ID AD_CLIENT_NAME PRODUCT_CODE PRODUCT_NAME AD_UNIT_ID AD_UNIT_CODE AD_UNIT_NAME AD_UNIT_SIZE_CODE AD_UNIT_SIZE_NAME CUSTOM_CHANNEL_ID CUSTOM_CHANNEL_CODE CUSTOM_CHANNEL_NAME URL_CHANNEL_ID URL_CHANNEL_NAME AD_FORMAT_CODE AD_FORMAT_NAME BRANDING_TYPE_CODE BRANDING_TYPE_NAME BUYER_NETWORK_ID BUYER_NETWORK_NAME BID_TYPE_CODE BID_TYPE_NAME DOMAIN_NAME COUNTRY_CODE COUNTRY_NAME TARGETING_TYPE_CODE TARGETING_TYPE_NAME PAGE_VIEWS PAGE_VIEWS_CTR PAGE_VIEWS_RPM AD_REQUESTS AD_REQUESTS_COVERAGE AD_REQUESTS_CTR AD_REQUESTS_RPM MATCHED_AD_REQUESTS MATCHED_AD_REQUESTS_CTR MATCHED_AD_REQUESTS_RPM INDIVIDUAL_AD_IMPRESSIONS INDIVIDUAL_AD_IMPRESSIONS_CTR INDIVIDUAL_AD_IMPRESSIONS_RPM CLICKS EARNINGS TOTAL_EARNINGS COST_PER_CLICK</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sorts")]
        public virtual IList<NestedClass4> Sorts {
            get {
                return this.sorts;
            }
            set {
                this.sorts = value;
            }
        }
        
        /// <summary>The date range to report on.</summary>
        public class NestedClass1 {
            
            private string endDate;
            
            private string startDate;
            
            /// <summary>End of the date range to report on in &quot;YYYY-MM-DD&quot; format, inclusive.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("end_date")]
            public virtual string EndDate {
                get {
                    return this.endDate;
                }
                set {
                    this.endDate = value;
                }
            }
            
            /// <summary>Start of the date range to report on in &quot;YYYY-MM-DD&quot; format, inclusive.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("start_date")]
            public virtual string StartDate {
                get {
                    return this.startDate;
                }
                set {
                    this.startDate = value;
                }
            }
        }
        
        /// <summary>Optionally specifies how to paginate the rows of the report output. If not defined, all rows of the report will be retrieved up to the available limit of 10,000 rows. If more rows are present in the report, multiple calls must be made, setting start_row to 10000 in the second call and so on.</summary>
        public class NestedClass2 {
            
            private long rowCount;
            
            private long startRow;
            
            /// <summary>Number of rows to return in the report, starting from start_row, or -1 to retrieve all rows from start_row on. No more than the limit of 10,000 rows will be returned, even if this value is set higher. Defaults to -1, i.e. retrieving all rows from start_row on.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("row_count")]
            public virtual long RowCount {
                get {
                    return this.rowCount;
                }
                set {
                    this.rowCount = value;
                }
            }
            
            /// <summary>Row in the report to start retrieving output from, beginning at 0. Defaults to 0, i.e. starting at the first row in the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("start_row")]
            public virtual long StartRow {
                get {
                    return this.startRow;
                }
                set {
                    this.startRow = value;
                }
            }
        }
        
        /// <summary>The scope of the report is the items this report will scan to collect data to report on. It is either a list of ad client ids, ad unit ids, custom channel ids or URL channel ids identifying the objects to be part of the scope. Only one list may be specified. The specified list may contain any amount of items.  The type of the scope dictates what dimensions can be used in the report. If ad unit or channel dimensions are used, the corresponding type of scope must also be used. For example, if AD_UNIT_CODE is used as a dimension ad_unit_ids must be specified as the scope, with no other list given in the scope.</summary>
        public class NestedClass3 {
            
            private IList<System.String> adClientIds;
            
            private IList<System.String> adUnitIds;
            
            private IList<System.String> customChannelIds;
            
            private IList<System.String> urlChannelIds;
            
            /// <summary>Specifies a scope over a set of ad clients. Each item in this list is an ad client id, uniquely identifying an ad client.  If this list is specified, none of the other lists in the scope may be specified.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("ad_client_ids")]
            public virtual IList<System.String> AdClientIds {
                get {
                    return this.adClientIds;
                }
                set {
                    this.adClientIds = value;
                }
            }
            
            /// <summary>Specifies a scope over a set of ad units. Each item in this list is an ad unit id, uniquely identifying an ad unit.  If this list is specified, none of the other lists in the scope may be specified.  This list must be specified if ad unit dimensions are used, for example AD_UNIT_CODE.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("ad_unit_ids")]
            public virtual IList<System.String> AdUnitIds {
                get {
                    return this.adUnitIds;
                }
                set {
                    this.adUnitIds = value;
                }
            }
            
            /// <summary>Specifies a scope over a set of custom channels. Each item in this list is a custom channel id, uniquely identifying a custom channel.  If this list is specified, none of the other lists in the scope may be specified.  This list must be specified if custom channel dimensions are used, for example CUSTOM_CHANNEL_CODE.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("custom_channel_ids")]
            public virtual IList<System.String> CustomChannelIds {
                get {
                    return this.customChannelIds;
                }
                set {
                    this.customChannelIds = value;
                }
            }
            
            /// <summary>Specifies a scope over a set of URL channels. Each item in this list is a URL channel id, uniquely identifying a URL channel.  If this list is specified, none of the other lists in the scope may be specified.  This list must be specified if URL channel dimensions are used, for example URL_CHANNEL_PATTERN.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url_channel_ids")]
            public virtual IList<System.String> UrlChannelIds {
                get {
                    return this.urlChannelIds;
                }
                set {
                    this.urlChannelIds = value;
                }
            }
        }
        
        public class NestedClass4 {
            
            private string column;
            
            private bool descending;
            
            /// <summary>The name of the dimension or metric to sort on.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("column")]
            public virtual string Column {
                get {
                    return this.column;
                }
                set {
                    this.column = value;
                }
            }
            
            /// <summary>If true, sort this column in descending order. If not specified the column is sorted in ascending order.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("descending")]
            public virtual bool Descending {
                get {
                    return this.descending;
                }
                set {
                    this.descending = value;
                }
            }
        }
    }
    
    public class AdsenseReportsGenerateResponse {
        
        private IList<NestedClass1> headers;
        
        private IList<IList<System.String>> rows;
        
        private long totalMatchedRows;
        
        /// <summary>The header names of the columns requested in the report. This is a list of names; one for each dimension in the request, followed by one for each metric in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("headers")]
        public virtual IList<NestedClass1> Headers {
            get {
                return this.headers;
            }
            set {
                this.headers = value;
            }
        }
        
        /// <summary>The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request. The dimension cells contain strings, and the metric cells contain numbers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual IList<IList<System.String>> Rows {
            get {
                return this.rows;
            }
            set {
                this.rows = value;
            }
        }
        
        /// <summary>The total number of rows matched by the report request. Fewer rows may be returned in the response due to being limited by the row count requested or the report row limit.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("total_matched_rows")]
        public virtual long TotalMatchedRows {
            get {
                return this.totalMatchedRows;
            }
            set {
                this.totalMatchedRows = value;
            }
        }
        
        public class NestedClass1 {
            
            private string name;
            
            private string type;
            
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
        }
    }
    
    public class CustomChannel {
        
        private string code;
        
        private string id;
        
        private string kind;
        
        private string name;
        
        /// <summary>Code of this custom channel, not necessarily unique across ad clients.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual string Code {
            get {
                return this.code;
            }
            set {
                this.code = value;
            }
        }
        
        /// <summary>Unique identifier of this custom channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Kind of resource this is, in this case adsense#customChannel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Name of this custom channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
    }
    
    public class CustomChannels {
        
        private string etag;
        
        private IList<CustomChannel> items;
        
        private string kind;
        
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string Etag {
            get {
                return this.etag;
            }
            set {
                this.etag = value;
            }
        }
        
        /// <summary>The custom channels returned in this list response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<CustomChannel> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Kind of list this is, in this case adsense#customChannels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
    }
    
    public class UrlChannel {
        
        private string id;
        
        private string kind;
        
        private string urlPattern;
        
        /// <summary>Unique identifier of this URL channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Kind of resource this is, in this case adsense#urlChannel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>URL Pattern of this URL channel. Does not include &quot;http://&quot; or &quot;https://&quot;. Example: www.example.com/home</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlPattern")]
        public virtual string UrlPattern {
            get {
                return this.urlPattern;
            }
            set {
                this.urlPattern = value;
            }
        }
    }
    
    public class UrlChannels {
        
        private string etag;
        
        private IList<UrlChannel> items;
        
        private string kind;
        
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string Etag {
            get {
                return this.etag;
            }
            set {
                this.etag = value;
            }
        }
        
        /// <summary>The URL channels returned in this list response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<UrlChannel> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Kind of list this is, in this case adsense#urlChannels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
    }
}
namespace Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public class AdsenseService : Google.Apis.Discovery.IRequestExecutor, Google.Apis.Discovery.ISchemaAwareRequestExecutor {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Version = "v1";
        
        private const string Name = "adsense";
        
        private const string BaseUri = "http://example.url.com/adsense/v1alpha4/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_0_3;
        
        private Newtonsoft.Json.JsonSerializer newtonJsonSerilizer = null;
        
        private Adclients adclients;
        
        private Adunits adunits;
        
        private Customchannels customchannels;
        
        private Reports reports;
        
        private Urlchannels urlchannels;
        
        public AdsenseService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.adclients = new Adclients(this);
            this.adunits = new Adunits(this);
            this.customchannels = new Customchannels(this);
            this.reports = new Reports(this);
            this.urlchannels = new Urlchannels(this);
        }
        
        public AdsenseService() : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.WebDiscoveryDevice(new System.Uri(string.Format("https://www.googleapis.com/discovery/v0.3/describe/{0}/{1}", AdsenseService.Name, AdsenseService.Version)))).GetService(AdsenseService.Version, AdsenseService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV0_3(null, AdsenseService.BaseUri)), Google.Apis.Authentication.AuthenticatorFactory.GetInstance().GetRegisteredAuthenticator()) {
        }
        
        private Newtonsoft.Json.JsonSerializer NewtonJsonSerilizer {
            get {
                if ((this.newtonJsonSerilizer == null)) {
                    Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings();
                    settings.NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore;
                    this.newtonJsonSerilizer = Newtonsoft.Json.JsonSerializer.Create(settings);
                }
                return this.newtonJsonSerilizer;
            }
        }
        
        public virtual Adclients Adclients {
            get {
                return this.adclients;
            }
        }
        
        public virtual Adunits Adunits {
            get {
                return this.adunits;
            }
        }
        
        public virtual Customchannels Customchannels {
            get {
                return this.customchannels;
            }
        }
        
        public virtual Reports Reports {
            get {
                return this.reports;
            }
        }
        
        public virtual Urlchannels Urlchannels {
            get {
                return this.urlchannels;
            }
        }
        
        public virtual System.IO.Stream ExecuteRequest(string resource, string method, string body, System.Collections.Generic.IDictionary<string, string> parameters) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            return request.WithParameters(parameters).WithAuthentication(authenticator).WithBody(body).ExecuteRequest();
        }
        
        public virtual System.IO.Stream ExecuteRequest(string resource, string method, object body, System.Collections.Generic.IDictionary<string, string> parameters) {
            return this.ExecuteRequest(resource, method, this.ObjectToJson(body), parameters);
        }
        
        public virtual string ObjectToJson(object obj) {
            System.IO.TextWriter tw = new System.IO.StringWriter();
            this.NewtonJsonSerilizer.Serialize(tw, obj);
            return tw.ToString();
        }
        
        public virtual TOutput JsonToObject<TOutput>(System.IO.Stream stream)
         {
            System.IO.StreamReader streamReader = new System.IO.StreamReader(stream);
            string str = streamReader.ReadToEnd();
            try {
                Google.Apis.Util.StandardResponse<TOutput> response = Newtonsoft.Json.JsonConvert.DeserializeObject <Google.Apis.Util.StandardResponse<TOutput>>(str);
                if ((response.Data == null)) {
                    throw new System.ApplicationException(string.Format("Failed to get response from stream, error was [{0}]", response.Error));
                }
                return response.Data;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException(string.Format("Failed to generate object of type[{0}] from Json[{1}]", typeof(TOutput).Name, str), ex);
            }
        }
    }
    
    public class Adclients {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "adclients";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(Adclients));
        
        public Adclients(AdsenseService service) {
            this.service = service;
        }
        
        public virtual System.IO.Stream List() {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            logger.Debug("Executing adclients.list");
            System.IO.Stream ret = this.service.ExecuteRequest(Adclients.Resource, "list", body, parameters);
            logger.Debug("Done Executing adclients.list");
            return ret;
        }
        
        public virtual Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdClients ListAsObject() {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            logger.Debug("Executing adclients.list");
            Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdClients ret = this.service.JsonToObject <Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdClients>(this.service.ExecuteRequest(Adclients.Resource, "list", body, parameters));
            logger.Debug("Done Executing adclients.list");
            return ret;
        }
    }
    
    public class Adunits {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "adunits";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(Adunits));
        
        public Adunits(AdsenseService service) {
            this.service = service;
        }
        
        public virtual System.IO.Stream List(string adClientId) {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            parameters["ad_client_id"] = adClientId;
            logger.Debug("Executing adunits.list");
            System.IO.Stream ret = this.service.ExecuteRequest(Adunits.Resource, "list", body, parameters);
            logger.Debug("Done Executing adunits.list");
            return ret;
        }
        
        public virtual Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdUnits ListAsObject(string adClientId) {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            parameters["ad_client_id"] = adClientId;
            logger.Debug("Executing adunits.list");
            Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdUnits ret = this.service.JsonToObject <Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdUnits>(this.service.ExecuteRequest(Adunits.Resource, "list", body, parameters));
            logger.Debug("Done Executing adunits.list");
            return ret;
        }
    }
    
    public class Customchannels {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "customchannels";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(Customchannels));
        
        public Customchannels(AdsenseService service) {
            this.service = service;
        }
        
        public virtual System.IO.Stream List(string adClientId) {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            parameters["ad_client_id"] = adClientId;
            logger.Debug("Executing customchannels.list");
            System.IO.Stream ret = this.service.ExecuteRequest(Customchannels.Resource, "list", body, parameters);
            logger.Debug("Done Executing customchannels.list");
            return ret;
        }
        
        public virtual Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.CustomChannels ListAsObject(string adClientId) {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            parameters["ad_client_id"] = adClientId;
            logger.Debug("Executing customchannels.list");
            Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.CustomChannels ret = this.service.JsonToObject <Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.CustomChannels>(this.service.ExecuteRequest(Customchannels.Resource, "list", body, parameters));
            logger.Debug("Done Executing customchannels.list");
            return ret;
        }
    }
    
    public class Reports {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "reports";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(Reports));
        
        public Reports(AdsenseService service) {
            this.service = service;
        }
        
        public virtual System.IO.Stream Generate(string body) {
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            logger.Debug("Executing reports.generate");
            System.IO.Stream ret = this.service.ExecuteRequest(Reports.Resource, "generate", body, parameters);
            logger.Debug("Done Executing reports.generate");
            return ret;
        }
        
        public virtual Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdsenseReportsGenerateResponse GenerateAsObject(Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdsenseReportsGenerateRequest body) {
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            logger.Debug("Executing reports.generate");
            Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdsenseReportsGenerateResponse ret = this.service.JsonToObject <Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.AdsenseReportsGenerateResponse>(this.service.ExecuteRequest(Reports.Resource, "generate", this.service.ObjectToJson(body), parameters));
            logger.Debug("Done Executing reports.generate");
            return ret;
        }
    }
    
    public class Urlchannels {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "urlchannels";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(Urlchannels));
        
        public Urlchannels(AdsenseService service) {
            this.service = service;
        }
        
        public virtual System.IO.Stream List(string adClientId) {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            parameters["ad_client_id"] = adClientId;
            logger.Debug("Executing urlchannels.list");
            System.IO.Stream ret = this.service.ExecuteRequest(Urlchannels.Resource, "list", body, parameters);
            logger.Debug("Done Executing urlchannels.list");
            return ret;
        }
        
        public virtual Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.UrlChannels ListAsObject(string adClientId) {
            string body = null;
            System.Collections.Generic.Dictionary<string, string> parameters = new System.Collections.Generic.Dictionary<string, string>();
            parameters["ad_client_id"] = adClientId;
            logger.Debug("Executing urlchannels.list");
            Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.UrlChannels ret = this.service.JsonToObject <Google.Apis.Samples.CommandLineGeneratedService.V03.AdSenseApiV1A4.Data.UrlChannels>(this.service.ExecuteRequest(Urlchannels.Resource, "list", body, parameters));
            logger.Debug("Done Executing urlchannels.list");
            return ret;
        }
    }
}
